#Clear Memory
rm(list=ls())
df<-bank_additional_full
#Loading the original data set
df <- read.csv("bank-additional-full.csv",header=TRUE,sep=";")

#Removing specified attributes
df <- subset(df, select = -c(marital,default,housing,loan,contact))

#Removing rows with unknowns
library(dplyr)
df <- df %>% filter(job != "unknown")
df <- df %>% filter(education != "unknown")


#Converting quantititative values to numeric class

df$age <- as.numeric(df$age)
df$campaign <- as.numeric(df$campaign)
df$duration <- as.numeric(df$duration)
df$pdays <- as.numeric(df$pdays)
df$previous <- as.numeric(df$previous)
df$emp.var.rate <- as.numeric(df$emp.var.rate)
df$cons.price.idx <- as.numeric(df$cons.price.idx)
df$cons.conf.idx <- as.numeric(df$cons.conf.idx)
df$nr.employed <- as.numeric(df$nr.employed)

#Converting target variable to factor

df$y <-as.factor(df$y)

#checking classes of attributes after transformation
sapply(df,class)

#Setting the desired seed
#Randomizing the dataframe
set.seed(120)
rows <- sample(nrow(df))
df <- df[rows, ]

#Importing 'dplyr' library
#Re-sampling the dataframe to 10k rows
set.seed(120)
library(dplyr)
df <- sample_n(df, 10000)

# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(120)
split <- sample.split(df$y, SplitRatio = 0.80)
training_set <- subset(df, split == TRUE)
test_set <- subset(df, split == FALSE)


#Analyzing boxplots of variables

library(ggplot2)
qplot(df $y, df $age, data=df, geom="boxplot", xlab="Subscription Status", ylab="Age")
qplot(df $y, df$day, data=df, geom="boxplot", xlab="Subscription Status", ylab="Day of Month Contacted")
qplot(df $y, df $poutcome, data=df, geom="boxplot", xlab="Subscription Status", ylab="poutcome")
qplot(df $y, df $nr.employed, data=df, geom="boxplot", xlab="Subscription Status", ylab="nr.employed")
qplot(df $y, df $euribor3m, data=df, geom="boxplot", xlab="Subscription Status", ylab="euribor3m")
qplot(df $y, df $duration, data=df, geom="boxplot", xlab="Subscription Status", ylab="duration")
qplot(df $y, df $job, data=df, geom="boxplot", xlab="Subscription Status", ylab="Age")
qplot(df $y, df $pdays, data=df, geom="boxplot", xlab="Subscription Status", ylab="Age")

hist(df$y , xlab = "duration",col = "yellow",border = "blue")

# Feature Scaling
training_set[, c("age","campaign","previous", "pdays","emp.var.rate","cons.price.idx","cons.conf.idx","euribor3m","nr.employed")] = scale(training_set[, c("age","campaign","previous","pdays","emp.var.rate","cons.price.idx","cons.conf.idx","euribor3m","nr.employed")])
test_set[, c("age","campaign","previous","pdays","emp.var.rate","cons.price.idx","cons.conf.idx","euribor3m","nr.employed")] = scale(test_set[, c("age","campaign","previous","pdays","emp.var.rate","cons.price.idx","cons.conf.idx","euribor3m","nr.employed")])


# Classification and Regression Trees (CART) #91.4 %
# Gini Index used

library(rpart)
library(rpart.plot)
library(rattle)

# Training the DT Classifier

df.cart<-rpart(y ~ ., training_set , method = 'class')
par(mfrow=c(1,1))
fancyRpartPlot(df.cart , digits=2 , palettes = c("Purples", "Oranges"))


#predict

cart_pred <- predict( df.cart , test_set , type = "class")
cart_prob <- predict( df.cart , test_set , type = "prob")

# Confusion matrix

confusionMatrix(factor(cart_pred) , factor(test_set$y))

Cart_table <- table(cart_pred, test_set$y)
accuracy_test_Cart <- sum(diag(Cart_table)) / sum(Cart_table)
